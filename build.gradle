group 'ru.renue.fts.asktt.client'
version '1.0-SNAPSHOT'

buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: 'checkstyle'
//apply plugin: 'pmd'
//apply plugin: 'findbugs'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

//findbugs {
//	toolVersion = "3.0.1"
//}
//
//checkstyle {
//	configFile = new File(rootDir, "checkstyle.xml")
//}
dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '1.5.4.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compileOnly ('org.projectlombok:lombok:1.16.18')
	compile group: 'org.springframework', name: 'spring-web', version: '4.3.9.RELEASE'
	//compile group: 'javax.jms', name: 'jms', version: '1.1'
	compile group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	/*compileOnly group: 'com.ibm', name: 'com.ibm.mq', version: '5.3.07'
	*/
	compile group: 'org.springframework', name: 'spring-jms', version: '4.3.9.RELEASE'
	compile fileTree(dir: '.\\libs', includes: ['*.jar'])
	compile group: 'com.caucho', name: 'hessian', version: '4.0.38'
	compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212'
	compile 'org.postgresql:postgresql'
	compile group: 'org.apache.camel', name: 'camel-jms', version: '2.19.1'
	compile group: 'org.apache.camel', name: 'camel-core', version: '2.19.1'
	compile group: 'org.apache.camel', name: 'camel-spring', version: '2.19.1'
	compile group: 'org.yaml', name: 'snakeyaml', version: '1.18'
	compile group: 'org.apache.camel', name: 'camel-spring-boot', version: '2.19.1'
	compile group: 'org.apache.camel', name: 'camel-spring-boot-starter', version: '2.19.1'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

//task checkFindBugsReport << {
//	def xmlReport = findbugsMain.reports.xml
//	if (!xmlReport.destination.exists()) return;
//	def slurped = new XmlSlurper().parse(xmlReport.destination)
//	def report = ""
//	slurped['BugInstance'].eachWithIndex { bug, index ->
//		report += "${index + 1}. Found bug risk ${bug.@'type'} of category ${bug.@'category'} "
//		report += "in the following places"
//		bug['SourceLine'].each { place ->
//			report += "\n       ${place.@'classname'} at lines ${place.@'start'}:${place.@'end'}"
//		}
//	}
//	if (report.length() > 1) {
//		logger.error "[FINDBUGS]\n ${report}"
//	}
//}
//
//findbugsMain.finalizedBy checkFindBugsReport
